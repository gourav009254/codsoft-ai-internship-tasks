import tkinter as tk
from tkinter import filedialog
import torch
from torchvision import models, transforms
from torchvision.models import ResNet50_Weights
from PIL import Image

# Open file dialog to select image
root = tk.Tk()
root.withdraw()  # Hide the root window
file_path = filedialog.askopenfilename(
    title="Select an Image",
    filetypes=[("Image Files", "*.jpg;*.jpeg;*.png;*.bmp;*.gif")]
)

if not file_path:
    print("No image selected.")
    exit()

# Load pre-trained ResNet50 model with latest weights
model = models.resnet50(weights=ResNet50_Weights.DEFAULT)
model.eval()

# Define image transformations
transform = transforms.Compose([
    transforms.Resize(256),
    transforms.CenterCrop(224),
    transforms.ToTensor(),
    transforms.Normalize(mean=[0.485, 0.456, 0.406],
                         std=[0.229, 0.224, 0.225]),
])

# Load and preprocess the image
image = Image.open(file_path).convert("RGB")
img_t = transform(image).unsqueeze(0)

# Predict
with torch.no_grad():
    outputs = model(img_t)
    _, predicted_idx = outputs.max(1)

# Load ImageNet labels
import requests
LABELS_URL = "https://raw.githubusercontent.com/pytorch/hub/master/imagenet_classes.txt"
labels = requests.get(LABELS_URL).text.split("\n")

# Print caption
print(f"Generated Caption: {labels[predicted_idx.item()]}")
